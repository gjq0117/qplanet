server:
  port: 8000
spring:
  application:
    name: planet-blog
  profiles:
    active: myTest
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://${planet.mysql.ip}:${planet.mysql.port}/${planet.mysql.db}?useUnicode=true&&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: ${planet.mysql.username}
      password: ${planet.mysql.password}
      # 初始化链接数量
      initial-size: 10
      # 最大活动线程数
      max-active: 100
      # 最小空闲连接数
      min-idle: 10
      # 获取链接的等待超时时间
      max-wait: 60000
      # 间隔多久进行一次检查，检查需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在连接池里最下的生存时间
      min-evictable-idle-time-millis: 30000
      # 校验的sql
      validation-query: SELECT 1
      # 异步初始化策略
      async-init: true
      # 打开PSCache。并且指定每个连接上PSCache连接大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
  redis:
    # Redis服务器地址
    host: ${planet.redis.host}
    # Redis服务器端口号
    port: ${planet.redis.port}
    # 使用的数据库索引，默认是0
    database: ${planet.redis.database}
    # 连接超时时间
    timeout: 1800000
    # 设置密码
    password: ${planet.redis.password}
    jedis:
      pool:
        enabled: true
        # 连接池最大连接数
        max-active: 20
        # 连接池最大阻塞时间（ms） 负值表示没有时间限制
        max-wait: -1
        # 最大空闲连接
        max-idle: 10
        # 最小空闲连接
        min-idle: 2
  # 邮箱配置
  mail:
    host: ${planet.mail.host}
    port: ${planet.mail.port}
    protocol: ${planet.mail.protocol}
    username: ${planet.mail.username}
    password: ${planet.mail.password}
    properties:
      mail:
        smtp:
          socketFactory:
            port: ${planet.mail.port}
            class: javax.net.ssl.SSLSocketFactory
          ssl:
            enable: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  mvc:
    pathmatch:
      # swagger新UI所需配置
      matching-strategy: ANT_PATH_MATCHER
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
# rocketMQ
rocketmq:
  name-server: ${planet.rocketMQ.name-server}
  producer:
    group: chat-group
    send-message-timeout: 3000 # 发送消息超时时间，单位：毫秒。默认为 3000 。
    compress-message-body-threshold: 4096 # 消息压缩阀值，当消息体的大小超过该阀值后，进行消息压缩。默认为 4 * 1024B
    max-message-size: 4194304 # 消息体的最大允许大小。。默认为 4 * 1024 * 1024B
    retry-times-when-send-failed: 2 # 同步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-async-failed: 2 # 异步发送消息时，失败重试次数。默认为 2 次。
    retry-next-server: false # 发送消息给 Broker 时，如果发送失败，是否重试另外一台 Broker 。默认为 false
    access-key: ${planet.rocketMQ.access-key} # Access Key ，可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    secret-key: ${planet.rocketMQ.secret-key} # Secret Key
    enable-msg-trace: true # 是否开启消息轨迹功能。默认为 true 开启。可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/msg_trace/user_guide.md 文档
    customized-trace-topic: RMQ_SYS_TRACE_TOPIC # 自定义消息轨迹的 Topic 。默认为 RMQ_SYS_TRACE_TOPIC 。
  consumer:
    access-key: ${planet.rocketMQ.access-key} # Access Key ，可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    secret-key: ${planet.rocketMQ.secret-key} # Secret Key
# 对象存储
oss:
  enabled: ${planet.oss.enabled}
  type: ${planet.oss.type}
  endpoint: ${planet.oss.endpoint}
  access-key: ${planet.oss.access-key}
  secret-key: ${planet.oss.secret-key}
  bucket-name: ${planet.oss.bucket-name}
jwt:
  secret: ${planet.jwt.secret}
logging:
  file:
    path: \logs\planet\blog
